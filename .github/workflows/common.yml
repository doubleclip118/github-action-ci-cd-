name: 코몬 CI/CD

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  pr-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-24.04
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 21버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: 테스트 결과를 PR에 코멘트로 등록합니다
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: '**/build/reports/jacoco/test/jacocoTestReport.xml'

  staging-deploy:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-24.04
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 21버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: application-secret.properties 파일 만들기
        run: echo "${{ secrets.APPLICATION_SECRET_PROPERTIES }}" > ./src/main/resources/application-secret.properties

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./staging.jar

      - name: SCP로 스테이징 서버에 빌드 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_EC2_HOST }}
          username: ${{ secrets.STAGING_EC2_USERNAME }}
          key: ${{ secrets.STAGING_EC2_PRIVATE_KEY }}
          source: staging.jar
          target: /home/ubuntu/staging-be/temp

      - name: SSH로 스테이징 서버에 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_EC2_HOST }}
          username: ${{ secrets.STAGING_EC2_USERNAME }}
          key: ${{ secrets.STAGING_EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/staging-be/current
            mkdir /home/ubuntu/staging-be/current
            mv /home/ubuntu/staging-be/temp/staging.jar /home/ubuntu/staging-be/current/staging.jar
            sudo systemctl stop staging-backend.service
            sudo systemctl start staging-backend.service

  production-deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 21버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: application-secret.properties 파일 만들기
        run: echo "${{ secrets.APPLICATION_SECRET_PROPERTIES }}" > ./src/main/resources/application-secret.properties

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./production.jar

      - name: SCP로 운영 서버에 빌드 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PRODUCTION_EC2_HOST }}
          username: ${{ secrets.PRODUCTION_EC2_USERNAME }}
          key: ${{ secrets.PRODUCTION_EC2_PRIVATE_KEY }}
          source: production.jar
          target: /home/ubuntu/common-be/temp

      - name: SSH로 운영 서버에 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_EC2_HOST }}
          username: ${{ secrets.PRODUCTION_EC2_USERNAME }}
          key: ${{ secrets.PRODUCTION_EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/common-be/current
            mkdir /home/ubuntu/common-be/current
            mv /home/ubuntu/common-be/temp/production.jar /home/ubuntu/common-be/current/production.jar
            sudo systemctl stop backend.service
            sudo systemctl start backend.service
